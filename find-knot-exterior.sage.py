

# This file was *autogenerated* from the file find-knot-exterior.sage
from sage.all_cmdline import *   # import sage library

_sage_const_7 = Integer(7); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_5 = Integer(5); _sage_const_6 = Integer(6); _sage_const_0 = Integer(0)
from snappy import *
import warnings
warnings.filterwarnings("ignore", category=DeprecationWarning) 
b=BraidGroup(_sage_const_7 )([_sage_const_1 , _sage_const_2 , _sage_const_1 , -_sage_const_2 , _sage_const_3 , _sage_const_2 , _sage_const_1 , -_sage_const_2 , -_sage_const_3 , _sage_const_4 , _sage_const_3 , _sage_const_2 , _sage_const_1 , -_sage_const_2 , -_sage_const_3 , -_sage_const_4 , _sage_const_5 , _sage_const_4 , _sage_const_3 , _sage_const_2 , -_sage_const_3 , -_sage_const_4 , -_sage_const_5 , _sage_const_6 , _sage_const_5 , _sage_const_4 , _sage_const_3 , -_sage_const_4 , -_sage_const_5 , -_sage_const_6 ])
l = list(b.Tietze())
M = Manifold('Braid%s(2,0)(0,0)'%(l))

homologyZZ = lambda Y: Y.homology().elementary_divisors() == [_sage_const_0 ]
coverlist = list(filter(homologyZZ, M.covers(_sage_const_2 )))

if len(coverlist) == _sage_const_1 :
    print("single manifold in coverlist so double cover found")

G = coverlist[_sage_const_0 ]

L = G.filled_triangulation().exterior_to_link(verbose=True)

print(L.knot_floer_homology())
 

